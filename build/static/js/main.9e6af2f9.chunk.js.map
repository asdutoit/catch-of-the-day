{"version":3,"sources":["helpers.js","components/StoreKeeper.js","components/Header.js","components/Order.js","components/Login.js","components/AddFishForm.js","components/editFishForm.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","console","log","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","Login","authenticate","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","editFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.9e6af2f9.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    // 1.  Stop the form from submitting\n    event.preventDefault();\n    // 2.  Get the text from the input\n    const storeName = this.myInput.current.value;\n    console.log(storeName);\n    // 3.  Change the page to /store/whatever-they-want\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    // console.log(this);\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store </button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"top\">\n        <h1>\n          Catch\n          <span className=\"ofThe\">\n            <span className=\"of\">Of</span>\n            <span className=\"the\">The</span>\n          </span>\n          Day\n        </h1>\n        <h3 className=\"tagline\">\n          <span>{this.props.tagline}</span>\n        </h3>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    // make sure the fish is loaded before we continue\n    if (!fish) {\n      return null;\n    }\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>Sorry {fish ? fish.name : \"Fish\"} is not available</li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In with Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In with Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = e => {\n    // 1. Stop form from submitting\n    e.preventDefault();\n    // 2. Create the Fish Object\n\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    // Update that fish\n    // 1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n    console.log(updatedFish);\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCk6XdYJH-h9hkg2iKoqA-9xYuRIPhbehM\",\n  authDomain: \"catch-of-the-day-stephan.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-stephan.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export.\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport Login from \"./Login\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./editFishForm\";\nimport PropTypes from \"prop-types\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n    console.log(authData);\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging Out\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>;\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name} <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => {\n            this.props.addToOrder(this.props.index);\n          }}\n        >\n          {isAvailable ? \"Add to Order\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1.  Take a copy of existing state\n    const fishes = { ...this.state.fishes };\n    // 2.  Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1.  Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2.  Update that state\n    fishes[key] = updatedFish;\n    // 3.  Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1.  Take copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2.  update the state\n    fishes[key] = null;\n    // 3.  Set to State\n    this.setState({ fishes });\n  };\n\n  removeFromOrder = key => {\n    // 1.  Take a copy of the current state\n    const order = { ...this.state.order };\n    // 2.  Remove the item from order\n    delete order[key];\n    // 3.  Set to State\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StoreKeeper\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./css/style.css\";\nimport Router from \"./components/Router\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}